# -*- coding: utf-8 -*-
"""Database - Q3_2020

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VO04wVaCSiEQlbrxpzLeVrMoo7KaXgAV
"""

import pandas as pd

Sales = pd.read_csv (r"/content/drive/MyDrive/Database - Q3_2020 - Sales.csv")

Sales = Sales.iloc[:9506]

Sales.columns.values[0] = "Ng√†y"

print(Sales.dtypes)

# Chuy·ªÉn c√°c c·ªôt ng√†y th√°ng v·ªÅ datetime
date_columns = ['Ng√†y', 'Close Date']
for col in date_columns:
    Sales[col] = pd.to_datetime(Sales[col], errors='coerce', dayfirst=True)

# Chuy·ªÉn c√°c c·ªôt s·ªë ti·ªÅn v·ªÅ float (lo·∫°i b·ªè d·∫•u ph·∫©y n·∫øu c√≥)
money_columns = ['S·ªë ti·ªÅn gi·∫£m gi√°', 'T·ªïng ti·ªÅn']
for col in money_columns:
    Sales[col] = Sales[col].replace({',': ''}, regex=True)  # X√≥a d·∫•u ph·∫©y trong s·ªë ti·ªÅn
    Sales[col] = pd.to_numeric(Sales[col], errors='coerce')

Sales['SƒêT'] = Sales['SƒêT'].astype('Int64')
Sales['S·ªë l∆∞·ª£ng b·ªô s√°ch'] = Sales['S·ªë l∆∞·ª£ng b·ªô s√°ch'].astype('Int64')
Sales['S·ªë l·∫ßn t∆∞∆°ng t√°c'] = Sales['S·ªë l·∫ßn t∆∞∆°ng t√°c'].astype('Int64')

# Ki·ªÉm tra k·∫øt qu·∫£
print(Sales.dtypes)

print(Sales.isna().sum())

Sales = pd.DataFrame(Sales)
Sales = Sales.drop(columns=["Ng√†y g·ªçi", "Ng√†y h·∫πn g·ªçi l·∫°i"])

Sales.loc[(Sales['Level'] == "L8.2 - Kh√°ch ƒë√£ thanh to√°n to√†n b·ªô") & (Sales['Tr·∫°ng th√°i'].isna()), 'Tr·∫°ng th√°i'] = "ƒê·∫∑t h√†ng"

trangthai_values = Sales["Tr·∫°ng th√°i"].count()
level_values = Sales["Level"].count()
print(f"üî¢ T·ªïng s·ªë gi√° tr·ªã trong c·ªôt 'Tr·∫°ng th√°i':{trangthai_values} v√† 'Level': {level_values}")

print(Sales["Tr·∫°ng th√°i"].isna().sum())

unique_status_level = Sales[["Tr·∫°ng th√°i", "Level"]].drop_duplicates().reset_index(drop=True)
print(unique_status_level)

Sales.to_excel("Sales.xlsx", index=False, engine="openpyxl")

MKT = pd.read_csv (r"/content/drive/MyDrive/Database - Q3_2020 - MKT.csv")

MKT["Chi ph√≠ Marketing"] = pd.to_numeric(MKT["Chi ph√≠ Marketing"], errors='coerce').fillna(0)

# T√≠nh t·ªïng
total_cost = MKT["Chi ph√≠ Marketing"].sum()

print(f"T·ªïng chi ph√≠ marketing: {total_cost:,.2f}")

# T√≠nh t·ªïng Leads theo Channel
mkt_lead_by_channel = MKT.groupby('Channel')['Lead MKT'].sum().reset_index()

print(mkt_lead_by_channel)

print(MKT.dtypes)

print(MKT.isna().sum())

MKT.to_excel("MKT.xlsx", index=False, engine="openpyxl")

Vandon = pd.read_csv (r'/content/drive/MyDrive/Database - Q3_2020 - VaÃ£ÃÇn ƒëoÃõn.csv')

print(Vandon.isna().sum())

VD = pd.DataFrame(Vandon)
VD = VD.drop(columns=["Ghi ch√∫ s·∫£n ph·∫©m", "Serial"])

print(VD.dtypes)

VD.to_excel("Van_don.xlsx", index=False, engine="openpyxl")

